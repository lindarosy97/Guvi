1.Write a function called “addFive”.
Given a number, “addFive” returns 5 added to that number.

Input:
addFive(5);
addFive(0);
addFive(-5);
Output:
10
5
0

Solution 
----------
var num = 10;
function addFive(num) { 
    return num+5;
}
var result = addFive(num)

console.log(result);

2.Problem:
Write a function called “getOpposite”.
Given a number, return its opposite
Input:
getOpposite(5);
getOpposite(0);
getOpposite(-5);
getOpposite(“5a”);
getOpposite(5.5);
Output:
-5
0
5
-1
-1

Solution
-----------
var num = 9.8;
function getOpposite(num) {
    if(num % 1 !== 0 || typeof(num)===String )
        return -1;
    return -num;
}
var result = getOpposite(num)

console.log(result);



3.Problem:
Fill in your code that takes an number minutes and converts it to seconds.
Examples
toSeconds(5) ➞ 300
toSeconds(3) ➞ 180
toSeconds(2) ➞ 120
var min = 5;
function toSeconds(min) {
    return min*60;
}
var secs = toSeconds(min);
console.log(secs);

4.Create a function that takes a string and returns it as an integer.
Examples
toInteger(“6”) ➞ 6
toInteger(“1000”) ➞ 1000
toInteger(“12”) ➞ 12

Solution 
var mystr = "5";
function toInteger(mystr) {
    return parseInt(mystr);
}
var myint = toInteger(mystr)
console.log(myint);
console.log(typeof(myint));

5. Problem
Create a function that takes a number as an argument, increments the number by +1 and returns the result.
Examples
nextNumber(0) ➞ 1
nextNumber(9) ➞ 10
nextNumber(-3) ➞ -2
var myint = 0;
function nextNumber(myint) {
    return myint+1;
}
var myNextint = nextNumber(myint)
console.log(myNextint);

6. Problem
Create a function that takes an array and returns the first element.
Examples
getFirstElement([1, 2, 3]) ➞ 1
getFirstElement([80, 5, 100]) ➞ 80
getFirstElement([-500, 0, 50]) ➞ -500
Solution 
var arr = [1, 2, 3];
function getFirstElement(arr) {
    return arr[0];
}
var data = getFirstElement(arr)
console.log(data);

7. Convert Hours into Seconds
Write a function that converts hours into seconds.
Examples
hourToSeconds(2) ➞ 7200
hourToSeconds(10) ➞ 36000
hourToSeconds(24) ➞ 86400

solution
---------
var arr = 24;
function hourToSeconds(arr) {
    return arr*60*60;
}
var data = hourToSeconds(arr);
console.log(data);

8. Find the Perimeter of a Rectangle
Create a function that takes height and width and finds the perimeter of a rectangle.
Examples
findPerimeter(6, 7) ➞ 26
findPerimeter(20, 10) ➞ 60
findPerimeter(2, 9) ➞ 22
Solution
----------

function findPerimeter(num1,num2) {
    return 2*num1+2*num2;
}
var peri = findPerimeter(6,7);
console.log(peri);

9. Problem
Less Than 100?
Given two numbers, return true if the sum of both numbers is less than 100. Otherwise return false.
Examples
lessThan100(22, 15) ➞ true
// 22 + 15 = 37
lessThan100(83, 34) ➞ false
// 83 + 34 = 117
Solution
-----------

function lessThan100(num1,num2) {
    var sum=num1+num2;
    if(sum>=100)
        return false;
    else
        return true;
}
var res = lessThan100(22,15);
console.log(res);


10. Problem
There is a single operator in JavaScript, capable of providing the remainder of a division operation. Two numbers are passed as parameters. The first parameter divided by the second parameter will have a remainder, possibly zero. Return that value.
Examples
remainder(1, 3) ➞ 1
remainder(3, 4) ➞ 3
remainder(-9, 45) ➞ -9
remainder(5, 5) ➞ 0

Solution 
function remainder(num1,num2) {
    return num1%num2;
}var res = remainder(-9, 45);
console.log(res);

11. Problem
Old macdonald had a farm:
MacDonald is asking you to tell him how many legs can be counted among all his animals. The farmer breeds three species:
turkey = 2 legs
horse = 4 legs
pigs = 4 legs
The farmer has counted his animals and he gives you a subtotal for each species. You have to implement a function that returns the total number of legs of all the animals.
Examples
CountAnimals(2, 3, 5) ➞ 36
CountAnimals(1, 2, 3) ➞ 22
CountAnimals(5, 2, 8) ➞ 50
function CountAnimals(tur,horse,pigs) {
    return 2*tur+4*horse+4*pigs;
}
var legs = CountAnimals(2,3,5)
console.log(legs);

12. Problem
Frames Per Second
Create a function that returns the number of frames shown in a given number of minutes for a certain FPS.
Examples
frames(1, 1) ➞ 60
frames(10, 1) ➞ 600
frames(10, 25) ➞ 15000
function frames(num1,num2) {
    return 60*num1*num2;
}
var fps = frames(25,10);
console.log(fps);


